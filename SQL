CREATE SCHEMA dannys_diner;
SET search_path = dannys_diner;

CREATE TABLE sales (
  "customer_id" VARCHAR(1),
  "order_date" DATE,
  "product_id" INTEGER
);

INSERT INTO sales
  ("customer_id", "order_date", "product_id")
VALUES
  ('A', '2021-01-01', '1'),
  ('A', '2021-01-01', '2'),
  ('A', '2021-01-07', '2'),
  ('A', '2021-01-10', '3'),
  ('A', '2021-01-11', '3'),
  ('A', '2021-01-11', '3'),
  ('B', '2021-01-01', '2'),
  ('B', '2021-01-02', '2'),
  ('B', '2021-01-04', '1'),
  ('B', '2021-01-11', '1'),
  ('B', '2021-01-16', '3'),
  ('B', '2021-02-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-07', '3');
 

CREATE TABLE menu (
  "product_id" INTEGER,
  "product_name" VARCHAR(5),
  "price" INTEGER
);

INSERT INTO menu
  ("product_id", "product_name", "price")
VALUES
  ('1', 'sushi', '10'),
  ('2', 'curry', '15'),
  ('3', 'ramen', '12');
  

CREATE TABLE members (
  "customer_id" VARCHAR(1),
  "join_date" DATE
);

INSERT INTO members
  ("customer_id", "join_date")
VALUES
  ('A', '2021-01-07'),
  ('B', '2021-01-09');
  

-- 1. What is the total amount each customer spent at the restaurant?

SELECT
s.customer_id,
sum(m.price)
from dannys_diner.sales as s
left join dannys_diner.menu as m
on
s.product_id=m.product_id
group by 1
order by 1;

-- 2. How many days has each customer visited the restaurant?

select
customer_id, count(distinct(order_date))
from dannys_diner.sales 
group by 1
order by 1;

-- 3. What was the first item from the menu purchased by each customer?

WITH cte AS
(
SELECT 
customer_id, 
order_date, 
product_name,
DENSE_RANK() OVER(PARTITION BY s.customer_id ORDER BY s.order_date) AS rank
FROM dannys_diner.sales AS s
JOIN dannys_diner.menu AS m
ON s.product_id = m.product_id
)

SELECT 
customer_id, 
product_name
FROM cte
WHERE rank = 1
GROUP BY customer_id, product_name;

-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?

select
m.product_name,
count(m.product_name) as purchases
FROM dannys_diner.sales AS s
JOIN dannys_diner.menu AS m
ON s.product_id = m.product_id
group by 1
order by purchases desc
limit 1;

-- 5. Which item was the most popular for each customer?

with cte as (select
s.customer_id,
m.product_name,
count(m.product_name) as purchases
FROM dannys_diner.sales AS s
JOIN dannys_diner.menu AS m
ON s.product_id = m.product_id
group by 1,2),
cte1 as (
select
customer_id,
product_name,
purchases,
dense_rank() over(partition by customer_id order by purchases desc) as dense_rank
from cte
group by 1,2,purchases)

select
customer_id,
product_name,
purchases
from cte1
where dense_rank=1
;

-- 6. Which item was purchased first by the customer after they became a member?

with cte as (SELECT
s.*, m.join_date
FROM dannys_diner.sales as s
join dannys_diner.members as m
on s.customer_id=m.customer_id
where order_date >= join_date),
cte1 as (select 
t1.*,
row_number() over(partition by t1.customer_id order by t1.order_date) as rn,
t2.product_name
from cte as t1
join dannys_diner.menu as t2
on t1.product_id=t2.product_id)

select 
customer_id,
product_name,
join_date,
order_date
from cte1
where rn=1
order by customer_id

-- 7. Which item was purchased just before the customer became a member?

with cte as (SELECT
s.*, m.join_date,
dense_rank() over(partition by s.customer_id order by s.order_date desc) as dense_rank,
me.product_name
FROM dannys_diner.sales as s
join dannys_diner.members as m
on s.customer_id=m.customer_id
join dannys_diner.menu as me
on s.product_id=me.product_id
where order_date < join_date)

select
customer_id,
product_name,
join_date,
order_date
from cte
where dense_rank=1



